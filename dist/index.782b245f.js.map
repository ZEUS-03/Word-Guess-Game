{"mappings":"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","sources":["word.js"],"sourcesContent":["// import party from \"party-js\";\r\n\r\nconst letters = document.querySelectorAll(\".character\");\r\nconst spinny = document.querySelector(\".info-bar\");\r\nconst canvas = document.querySelector('#my-canvas');\r\n\r\nconst ANSWER_LENGTH = 5;\r\nlet done = false;\r\nlet ROUNDS = 6;\r\n\r\n// console.log(letters)\r\n\r\n// check if it's a valid letter using regex \r\nfunction isLetter(value) {\r\n    return /^[a-zA-Z]$/.test(value);\r\n}\r\n\r\n// adding and removing show class from spinny class.\r\nfunction setLoading(isLoading) {\r\n    spinny.classList.toggle('show', isLoading);\r\n}\r\n\r\n// making a map to map number of each letter occured\r\nfunction makeMap(array) {\r\n    const obj = {};\r\n    for(i=0; i<array.length; i++) {\r\n        let word = array[i];\r\n        if(obj[word]) {\r\n            obj[word] += 1;\r\n        }\r\n        else {\r\n            obj[word] = 1;\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nasync function init() {\r\n    let currentWord = '';\r\n    let currentrow = 0;\r\n    let isLoading = true;\r\n\r\n    // getting the word-of-the-day using API call\r\n    const res = await fetch(\"https://words.dev-apis.com/word-of-the-day?random=1\");\r\n    const resObj = await res.json();\r\n    const word = resObj.word.toUpperCase();\r\n    const wordSplit = word.split(\"\");\r\n    setLoading(false);\r\n    isLoading = false;\r\n\r\n    console.log(word);\r\n\r\n    // to enter letters inside the boxes \r\n    function enterInput( keyPressed ) { \r\n\r\n        if (currentWord.length < ANSWER_LENGTH) {\r\n            currentWord += keyPressed;\r\n        } else {\r\n            // replaced the last letter\r\n            currentWord = currentWord.substring(0, currentWord.length - 1) + keyPressed;\r\n        }\r\n          \r\n        letters[ANSWER_LENGTH * currentrow + currentWord.length - 1].innerText = keyPressed;\r\n    }\r\n\r\n    // function to deal with ENTER key.\r\n    async function hitEnter () {\r\n        \r\n        if ( currentWord.length !== ANSWER_LENGTH ) {\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        isLoading = true;\r\n\r\n        const res = await fetch(\"https://words.dev-apis.com/validate-word\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({word: currentWord})\r\n        });\r\n\r\n        const resObj = await res.json();\r\n        const validWord = resObj.validWord;\r\n\r\n        isLoading = false;\r\n        setLoading(false);\r\n\r\n        if (!validWord) {\r\n            markInvalidWord();\r\n            return;\r\n        }\r\n\r\n        const currentWordSplit = currentWord.split(\"\");\r\n        const map = makeMap(wordSplit);\r\n        // console.log(validWord);\r\n\r\n\r\n        for ( i=0; i<ANSWER_LENGTH; i++ ) {\r\n            if ( currentWordSplit[i] === wordSplit[i] ) {\r\n                letters[ ANSWER_LENGTH * currentrow + i ].classList.add(\"correct\");\r\n                map[currentWordSplit[i]]--;\r\n            } \r\n        }\r\n\r\n        for ( i=0; i<ANSWER_LENGTH; i++ ) {\r\n            if ( currentWordSplit[i] === wordSplit[i] ) {\r\n                // Don't do anything\r\n            } else if (wordSplit.includes(currentWordSplit[i]) && map[currentWordSplit[i]] > 0) {\r\n                letters[ ANSWER_LENGTH * currentrow + i ].classList.add(\"close\");\r\n                map[currentWordSplit[i]]--;\r\n            } else {\r\n                letters[ ANSWER_LENGTH * currentrow + i ].classList.add(\"wrong\");\r\n            }\r\n        }\r\n        currentrow++;\r\n\r\n        if (currentWord === word) {\r\n\r\n            winningEvents();\r\n        \r\n        } else if ( currentrow === ROUNDS) {\r\n            \r\n            losingEvents();\r\n        \r\n        } \r\n        currentWord = '';\r\n    }\r\n    // function for backspace\r\n    function backSpace() {\r\n\r\n        currentWord = currentWord.substring( 0, currentWord.length - 1 );\r\n        letters[ANSWER_LENGTH * currentrow + currentWord.length].innerText = '';\r\n    \r\n    }\r\n\r\n    function markInvalidWord() {\r\n        for (let i = 0; i < ANSWER_LENGTH; i++) {\r\n            letters[currentrow * ANSWER_LENGTH + i].classList.remove(\"invalid\");\r\n    \r\n            // repaint without the \"invalid class\" so we can then add it again\r\n            setTimeout(\r\n                () => letters[currentrow * ANSWER_LENGTH + i].classList.add(\"invalid\"),\r\n                10\r\n            );\r\n        }\r\n    }\r\n\r\n    // winning events\r\n    function winningEvents() {\r\n\r\n        document.querySelector(\".popup\").classList.add(\"show\");\r\n        const jsConfetti = new JSConfetti();\r\n            jsConfetti.addConfetti(\r\n                {\r\n                emojis: ['ðŸ¤¯', 'ðŸ˜Ž', 'ðŸ’¥', 'âœ¨', 'ðŸ’«', 'ðŸ’•']\r\n            });\r\n        document.querySelector(\".brand\").classList.add(\"winner\");\r\n        document.querySelector(\".close-popup\").addEventListener(\"click\", function() {\r\n                document.querySelector(\".popup\").classList.remove(\"show\");\r\n        });\r\n        done = true;\r\n        return;\r\n    }\r\n\r\n    function losingEvents() {\r\n        document.querySelector(\".loss-heading\").innerText = `Whoops! You lostðŸ˜­. Answer is word: '${word}'`;\r\n        const jsConfetti = new JSConfetti();\r\n        \r\n        jsConfetti.addConfetti({\r\n            emojis: ['ðŸ˜­', 'ðŸ¥²', 'ðŸ’”', 'ðŸ¥¹', 'ðŸ˜¢', 'ðŸ˜¿'],\r\n            confettiRadius: 6,\r\n        });\r\n        document.querySelector(\".popup-loss\").classList.add(\"show\");\r\n        document.querySelector(\".close-popup-loss\").addEventListener(\"click\", function() {\r\n                document.querySelector(\".popup-loss\").classList.remove(\"show\");\r\n        });\r\n\r\n        done = true;\r\n    }\r\n\r\n    document.addEventListener(\"keydown\", function onKeyPress(event) {\r\n\r\n        if (done || isLoading){\r\n            return;\r\n        }\r\n\r\n        const keyPressed = event.key;\r\n        // console.log(keyPressed);\r\n       \r\n        if (keyPressed === 'Enter') {\r\n            hitEnter();\r\n        } else if (keyPressed === 'Backspace') {\r\n            backSpace();\r\n        } else if (isLetter(keyPressed)){\r\n            enterInput(keyPressed.toUpperCase());\r\n        }\r\n    })\r\n}\r\ninit();"],"names":[],"version":3,"file":"index.782b245f.js.map","sourceRoot":"/__parcel_source_root/"}